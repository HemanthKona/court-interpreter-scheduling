version: "3"

services:
  ### API #############################
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    env_file: 
      - .env.dev
    ports:
      - "4000:4000"
    environment:
      - JWT_SECRET=123_JWT_SECRET!
      - NODE_ENV=development
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - POSTGRESQL_DATABASE=nest_api_dev
      - POSTGRESQL_USER=court_nestapi
      - POSTGRESQL_PASSWORD=court_nest123
      - DB_TEST_DATABASE=nest_api_test
      - DEPLOY_ENV=node-api-dev
      - MERGE_BRANCH=dev
      - KEYCLOAK_REALM=${KEYCLOAK_REALM}
      - KEYCLOAK_CLIENT=${KEYCLOAK_CLIENT}
      - KEYCLOAK_FE_CLIENT=${KEYCLOAK_FE_CLIENT}
      - KEYCLOAK_AUTH_URL=${KEYCLOAK_AUTH_URL}
      - KEYCLOAK_SECRET=${KEYCLOAK_SECRET}
      - MAP_BOX_TOKEN=${MAP_BOX_TOKEN}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    expose:
      - "4000"
    volumes:
      # Binds the application folder from the host inside the container for fast changes
      - ./api:/app
      # Ignores/Hides the node_modules from the bind on the host allowing the node_modules
      # from inside the container to be used instead
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - backend

  ### Database #############################
  postgres:
    build:
      context: ./.docker/postgres
    env_file: 
      - .dev.env
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_MULTIPLE_DATABASES="nest_api_dev","nest_api_test","court_migrations"
      - POSTGRES_USER=court_nestapi
      - POSTGRES_PASSWORD=court_nest123
    networks:
      - backend

  ### Frontend ###############################
  client:
    build:
      context: ./frontend/
      dockerfile: Dockerfile.dev
    environment:
      PUBLIC_URL: /interpreter-scheduling
      REACT_APP_API_HOST: http://localhost:4000/api/v1
      REACT_APP_REALM_AUTH_URL: ${KEYCLOAK_AUTH_URL}
      KC_REALM: ${KEYCLOAK_REALM}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "35729:35729"
      - "3000:3000"
    stdin_open: true
    networks:
      - backend
    depends_on:
      - api

networks:
  backend:
    driver: "bridge"

volumes:
  postgres:
